name: CI

on:
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.1.12-0

      - uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: Format code
        run: |
          poetry run black .

      - name: Block PR if formatting is wrong
        if: ${{ failure() }}
        uses: reviewdog/action-setup@v1
        with:
          annotation_level: failure
          tool_name: Ruff Linter
          fail_on_error: true

      - name: Check for linting errors
        run: poetry run ruff check .

      - name: Block pull request if linting fails
        if: ${{ failure() }}
        uses: reviewdog/action-setup@v1
        with:
          annotation_level: failure
          tool_name: Ruff Linter
          fail_on_error: true
